{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "https://raw.githubusercontent.com/Boavizta/BoAmps/main/model/report_schema.json",
  "title": "report",
    "description": "the main object containing all the context pretaining to a computing task",
    "type": "object",
    "properties": {
      "header": {
        "type": "object",
        "description": "information about the source of the report and publishing organization's details",
        "properties": {
          "licensing": {
            "type": "string",
            "description": "the type of licensing applicable for the sharing of the report"
          },
          "formatVersion": {
            "type": "string",
            "description": "the version of the specification of this set of schemas defining the report's fields"
          },
          "formatVersionSpecificationUri": {
            "type": "string",
            "description": "the URI of the present specification of this set of schemas"
          },
          "reportId": {
            "type": "string",
            "description": "the unique identifier of this report, preferably as a uuid4 string"
          },
          "reportDatetime": {
            "type": "string",
            "description": "the publishing date of this report in format YYYY-MM-DD HH:MM:SS"
          },
          "reportStatus": {
            "type": "string",
            "enum": [ "draft", "final", "corrective", "other" ],
            "description": "the status of this report"
          },
          "publisher": {
            "type": "object",
            "description": "the details about the publishing organization who produced the report",
            "properties": {
              "name": {
                "type": "string",
                "description": "name of the organization"
              },
              "division": {
                "type": "string",
                "description": "name of the publishing department within the organization"
              },
              "projectName": {
                "type": "string",
                "description": "name of the publishing project within the organization"
              },
              "confidentialityLevel": {
                "type": "string",
                "enum": [ "public", "internal", "confidential", "secret" ],
                "description": " the confidentiality of the report"
              },
              "publicKey": {
                "type": "string",
                "description": "the cryptographic public key to check the identity of the publishing organization"
              }
            },
            "required": [
              "confidentialityLevel"
            ]
          }
        },
        "required": [
          "reportDatetime"
        ]
      },
      "task": {
        "type": "object",
        "description": "the nature of the task being measured",
        "properties": {
          "taskStage": {
            "type": "string",
            "description": "stage of the task, example: datacreation, preprocessing, training, finetuning, inference, retraining..., add a + between stages if several but we do recommand to measure each step independantly"
          },
          "taskFamily": {
            "type": "string",
            "description": "the family of task you are running, e.g. text classification, image generation, speech recognition, robotics navigation..."
          },
          "nbRequest": {
            "type": "number",
            "description": "if inference stage, the number of requests the measure corresponds to, 0 or empty if you're not measuring the inference stage"
          },
          "algorithms": {
            "type": "array",
            "description": "the list of the main algorithmic approache(s) used by the computing task",
            "minItems": 1,
            "items": {
              "type":"object",
              "$ref": "https://raw.githubusercontent.com/Boavizta/BoAmps/main/model/algorithm_schema.json"
            }
          },
          "dataset": {
            "type": "array",
            "description": "the list of dataset processed by the computing task, if you are working on multipodal training you can add many items to the list to describe it. If you are working on inference, you can add at least one item to describe the input data and another one for the output",
            "minItems": 1,
            "items": {
              "type":"object",
              "$ref": "https://raw.githubusercontent.com/Boavizta/BoAmps/main/model/dataset_schema.json"
            }
          },
          "measuredAccuracy": {
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "description": "the measured accuracy of your model (between 0 and 1)"
          },
          "estimatedAccuracy": {
            "type": "string",
            "enum": [ "veryPoor", "poor", "average", "good", "veryGood" ],
            "description": "if you didn't measure the accuracy of your model in concrete percentages, you can give an assessment of the precision between: VERY POOR, POOR, AVERAGE, GOOD, VERY GOOD"
          },
          "taskDescription": {
            "type": "string",
            "description": "free field, to be fillied in if you have more details to share about your task"
          }
        },
        "required": [
          "taskStage",
          "taskFamily",
          "algorithms",
          "dataset"
        ]
      },
      "measures": {
        "type": "array",
        "description": "the software and/or hardware measures of the energy consumed by the computing task",
        "minItems": 1,
        "items": {
          "type":"object",
          "$ref": "https://raw.githubusercontent.com/Boavizta/BoAmps/main/model/measure_schema.json"
        },
        "required": [
          "measures"  
        ]
      },
      "system": {
        "type": "object",
        "description": "system information of the infrastructure on which is run the computing task",
        "properties": {
          "os": {
            "type": "string",
            "description":"name of the operating system"
          },
          "distribution": {
            "type": "string",
            "description":"distribution of the operating system"
          },
          "distributionVersion": {
            "type": "string",
            "description":"distribution's version of the operating system"
          }
        },
        "required": [
          "os"
        ]
      },
      "software": {
        "type": "object",
        "description": "programming language information of the computing task",
        "properties": {
          "language": {
            "type": "string",
            "description": "name of the programming language used, example : c, java, julia, python..."
          },
          "version": {
            "type": "string",
            "description": "version of the programming language used"
          }
        },
        "required": [
          "language"
        ]
      },
      "infrastructure": {
        "type": "object",
        "description": "the infrastructure on which is performed the computing task",
        "properties": {
        "infraType":{
          "type":"string",
          "enum":["publicCloud","privateCloud", "onPremise", "other"],
          "description": "the type of infrastructure used for the task"
        },
        "cloudProvider":{
          "type":"string",
          "description": "If you are on the cloud, the name of your cloud provider, for example : aws, azure, google, ovh..."
        },
        "cloudInstance":{
          "type":"string",
          "description": "If you are on a cloud vm, the name of your cloud instance, for example : a1.large, dasv4-type2..."
        },
        "cloudService":{
          "type":"string",
          "description": "If you are using an AI cloud service, the name of your cloud service, for example : openAI service..."
        },
        "components": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "$ref": "https://raw.githubusercontent.com/Boavizta/BoAmps/main/model/hardware_schema.json"
          }
        }
        },
        "required": [
          "infraType",
          "components"
        ]
      },
      "environment": {
        "type": "object",
        "description": "environment of the infrastructure: region of calculation and energy used",
        "properties": {
          "country": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "location": {
            "description": "more precise location like city, region or datacenter name",
            "type": "string"
          },
          "powerSupplierType": {
            "type": "string",
            "enum": [ "public", "private", "internal", "other" ]
          },
          "powerSource": {
            "type": "string",
            "enum": [ "solar", "wind", "nuclear", "hydroelectric", "gas", "coal", "other" ]
          },
          "powerSourceCarbonIntensity": {
            "type": "number",
            "description": "carbon intensity of the electicity you used (in gCO2eq/kWh)"
          }
        },
        "required": [
          "country"
        ]
      },
      "quality": {
        "type": "string",
        "enum":[ "high", "medium", "low" ],
        "description": "the quality of the information you provided, 3 possibilities : high (percentage error +/-10%), medium (percentage error +/-25%), low (percentage error +/-50%)"
      },
      "$hash": {
        "type": "object",
        "properties": {
          "hashAlgorithm": {
            "type": "string",
            "enum": [ "MD5", "RIPEMD-128", "RIPEMD-160", "RIPEMD-256", "RIPEMD-320", "SHA-1", "SHA-224", "SHA-256", "SHA-384", "SHA-512" ],
            "description": "the hash function to apply first to the JSON report"
          },
          "cryptographicAlgorithm": {
            "type": "string",
            "enum": [ "RSA", "DSA", "ECDSA", "EDDSA" ],
            "description": "the public key function to apply to the hash"
          },
          "value": {
            "type": "string",
            "description": "encrypted value of the hash value of the minimized JSON instance string, using the publisher's private key and including all root properties except the $hash property itself"
          }
        },
        "required": [
          "hashAlgorithm",
          "cryptographicAlgorithm",
          "value"
        ]
      }
    },
    "required": [
      "task",
      "measures",
      "infrastructure"
    ]
  }
