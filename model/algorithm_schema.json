{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://raw.githubusercontent.com/Boavizta/BoAmps/main/model/algorithm_schema.json",
    "title": "algorithm",
    "description": "the type of algorithm used by the computing task",
    "type": "object",
    "properties": {
      "algorithmDescription": {
        "type": "string",
        "description": "the family of task performed, example : classification, regression, chatbot, summarization, keyword extraction, image recognition, embeddings creation, rag..."
      },
      "algorithmName": {
        "type": "string",
        "description": "the case-sensitive common name of the algorithm, example: randomForest, cnn, naive bayes..."
      },
      "algorithmUri": {
        "type": "string",
        "description": "the URI of the model, if publicly available"
      },
      "foundationModelName": {
        "type": "string",
        "description": "if a foundation model is used, its case-sensitive common name, example: llama3.1-8b, gpt4-o..."
      },
      "foundationModelUri": {
        "type": "string",
        "description": "the URI of the foundation model, if publicly available"
      },
      "parametersNumber": {
        "type": "number",
        "description" : "number of billions of total parameters of your model, e.g. 8 for llama3.1-8b"
      },
      "framework": {
        "type": "string",
        "description": "the common name of the software framework implementing the algorithm, if any"
      },
      "frameworkVersion": {
        "type": "string",
        "description": "the version of the software framework implementing the algorithm, if any"
      },
      "classPath": {
        "type": "string",
        "description": "the full class path of the algorithm within the framework, with elements separated by dots"
      },
      "layersNumber": {
        "type": "number",
        "description" : "if deep learning, precise the number of layers in your network"
      },
      "epochsNumber":{
         "type": "number",
         "description" : "if training, the number of complete passes through the training dataset"
      },
      "optimizer":{
        "type": "string",
        "description" : "the algorithm used to optimize the models weights, e.g. gridSearch, lora, adam"
      },
      "quantization":{
        "type":"string", 
        "description": "the type of quantization used : fp32, fp16, b16, int8 ... "
      },
      "hyperparameters": {
        "type": "object",
        "properties": {
          "tuningMethod":{
            "type":"string", 
            "description": "the method of hyperparameters tuning used (if any), example: gridSearch, randomizedSearch..."
          },
          "values":{
            "type":"array",
            "items": {
              "type": "object",
              "properties": {
                "hyperparameterName": {
                  "type": "string",
                  "description": "the name of the hyperparameter, example: c, kernel, gamma, class_weight..."
                },
                "hyperparameterValue": {
                  "type": "string",
                  "description": "the value of the hyperparameter, example: rbf, 1e-4, 10, linear..."
                }
              }
            } 
          }
        }
      }
    }
  }