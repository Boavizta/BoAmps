[Config]  # DO NOT MODIFY
 ├nbAlgo=1                                              #Number of Algorithm object occurrences in the form
 ├nbAlgoHyperparamVal=1                    #Number of Hyperparameter Value object occurrences per Algorithm in the form
 ├nbDataset=2                                        #Number of Dataset object occurrences in the form
 ├nbDatasetShape=1                              #Number of Shape object occurrences per Dataset in the form
 ├datasetInferenceProperties=1      #Number of InferenceProperties object occurrences per Dataset in the form
 ├nbMeasures=1                                      #Number of Measures object occurrences in the form
 ├infraComponents=3                            #Number of Components object occurrences in the form
 └
[header]                                                                                             #MANDATORY : Information About The Source Of The Report And Publishing Organization'S Details
 ├licensing=                                                                                         #OPTIONAL as {String} : The Type Of Licensing Applicable For The Sharing Of The Report
 ├formatVersion=                                                                                     #MANDATORY as {String} : The Version Of The Specification Of This Set Of Schemas Defining The Report'S Fields
 ├formatVersionSpecificationUri=                                                                     #OPTIONAL as {String} : The Uri Of The Present Specification Of This Set Of Schemas
 ├reportId=831a17e5-38ce-4bf6-bc25-8667841f36f8                                                      #MANDATORY as {String} : The Unique Identifier Of This Report, Preferably As A Uuid4 String
 ├reportDatetime=2025-03-04T13:00:02                                                                 #OPTIONAL as {String} : The Publishing Date Of This Report In Format Yyyy-Mm-Dd Hh:Mm:Ss
 ├reportStatus=                                                                                      #MANDATORY value in {draft, final, corrective, $other} : The Status Of This Report
 |  [publisher]                                                                                      #MANDATORY : The Details About The Publishing Organization Who Produced The Report
 |   ├name=                                                                                          #OPTIONAL as {String} : Name Of The Organization
 |   ├division=                                                                                      #OPTIONAL as {String} : Name Of The Publishing Department Within The Organization
 |   ├projectName=                                                                                   #OPTIONAL as {String} : Name Of The Publishing Project Within The Organization
 |   ├confidentialityLevel=                                                                          #MANDATORY value in {public, internal, confidential, secret} : The Confidentiality Of The Report
 |   ├publicKey=                                                                                     #OPTIONAL as {String} : The Cryptographic Public Key To Check The Identity Of The Publishing Organization
 |   └                                                                                               
 └                                                                                                   
[task]                                                                                               #MANDATORY : The Nature Of The Task Being Measured
 ├taskFamily=                                                                                        #MANDATORY as {String} : The Family Of Task You Are Running, E.G. Text Classification, Image Generation, Speech Recognition, Robotics Navigation...
 ├taskStage=                                                                                         #MANDATORY as {String} : Stage Of The Task, Example: Datacreation, Preprocessing, Training, Finetuning, Inference, Retraining..., Add A + Between Stages If Several But We Do Recommand To Measure Each Step Independantly
 ├nbRequest=                                                                                         #MANDATORY as {String} : If Inference Stage, The Number Of Requests The Measure Corresponds To, 0 Or Empty If You'Re Not Measuring The Inference Stage
 ├(algorithms.1)                                                                                     #MANDATORY : The List Of The Main Algorithmic Approache(S) Used By The Computing Task
 |   ├trainingType=                                                                                  #OPTIONAL as {String} : If Applicable, Type Of Training (If The Stage Corresponds To A Training) : Supervisedlearning, Unsupervisedlearning, Semisupervisedlearning, Reinforcementlearning, Transferlearning ...
 |   ├algorithmType=                                                                                 #OPTIONAL as {String} : The Type Of Algorithm Used, Example : Embeddings Creation, Rag, Nlp, Neural Network, Llm...
 |   ├algorithmName=                                                                                 #OPTIONAL as {String} : The Case-Sensitive Common Name Of The Algorithm, Example: Randomforest, Naive Bayes, Cnn, Rnn, Transformers, If You Are Directly Using A Foundation Model, Let It Empty And Fill The Field Foundationmodelname...
 |   ├algorithmUri=                                                                                  #OPTIONAL as {String} : The Uri Of The Model, If Publicly Available
 |   ├foundationModelName=                                                                           #OPTIONAL as {String} : If A Foundation Model Is Used, Its Case-Sensitive Common Name, Example: Llama3.1-8B, Gpt4-O...
 |   ├foundationModelUri=                                                                            #OPTIONAL as {String} : The Uri Of The Foundation Model, If Publicly Available
 |   ├parametersNumber=                                                                              #OPTIONAL as {Float} : Number Of Billions Of Total Parameters Of Your Model, E.G. 8 For Llama3.1-8B
 |   ├framework=                                                                                     #OPTIONAL as {String} : The Common Name Of The Software Framework Implementing The Algorithm, If Any
 |   ├frameworkVersion=                                                                              #OPTIONAL as {String} : The Version Of The Software Framework Implementing The Algorithm, If Any
 |   ├classPath=                                                                                     #OPTIONAL as {String} : The Full Class Path Of The Algorithm Within The Framework, With Elements Separated By Dots
 |   ├layersNumber=                                                                                  #OPTIONAL as {Float} : If Deep Learning, Precise The Number Of Layers In Your Network
 |   ├epochsNumber=                                                                                  #OPTIONAL as {Float} : If Training, The Number Of Complete Passes Through The Training Dataset
 |   ├optimizer=                                                                                     #OPTIONAL as {String} : The Algorithm Used To Optimize The Models Weights, E.G. Gridsearch, Lora, Adam
 |   ├quantization=                                                                                  #MANDATORY as {String} : The Type Of Quantization Used : Fp32, Fp16, B16, Int8 ...
 |   └                                                                                               
 ├(dataset.1)                                                                                        #MANDATORY : The List Of Dataset Processed And/Or Generated By The Computing Task, If You Are Working On Multipodal Training You Can Add Many Items To The List To Describe It. If You Are Working On Inference, You Can Add At Least One Item To Describe The Input Data And Another One For The Output
 |   ├dataUsage=                                                                                     #MANDATORY value in {"""input"", ""output"""} : The Use Of The Dataset: Is It Used As Model Input Or Output ?
 |   ├dataType=                                                                                      #MANDATORY value in {tabular, audio, boolean, image, video, object, text, $other} : The Nature Of The Data Used
 |   ├dataFormat=                                                                                    #OPTIONAL value in {} : If The Data Is Passed In The Form Of A File, What Format Is The Data In?
 |   ├dataSize=                                                                                      #OPTIONAL as {Float} : The Size Of The Dataset (In Go), If Small Quantity Just Fill The Field Nbitems
 |   ├dataQuantity=                                                                                  #OPTIONAL as {Float} : The Number Of Data In The Dataset, E.G. 3 (Images, Audio Or Tokens)
 |   ├shape=                                                                                         #OPTIONAL as {String} : The Shape Of Your Dataset, Can Be Found With X.Shape With Dataframes, E.G. (12, 1000) For A 2D Table With 12 Columns And 1000 Rows
 |   ├source=                                                                                        #OPTIONAL as {String} : The Kind Of Source Of The Dataset
 |   ├sourceUri=                                                                                     #OPTIONAL as {String} : The Uri Of The Dataset If Available
 |   ├owner=                                                                                         #OPTIONAL as {String} : The Owner Of The Dataset If Available
 |   └                                                                                               
 ├(dataset.2)                                                                                        #MANDATORY : The List Of Dataset Processed And/Or Generated By The Computing Task, If You Are Working On Multipodal Training You Can Add Many Items To The List To Describe It. If You Are Working On Inference, You Can Add At Least One Item To Describe The Input Data And Another One For The Output
 |   ├dataUsage=                                                                                     #MANDATORY value in {"""input"", ""output"""} : The Use Of The Dataset: Is It Used As Model Input Or Output ?
 |   ├dataType=                                                                                      #MANDATORY value in {tabular, audio, boolean, image, video, object, text, $other} : The Nature Of The Data Used
 |   ├dataFormat=                                                                                    #OPTIONAL value in {} : If The Data Is Passed In The Form Of A File, What Format Is The Data In?
 |   ├dataSize=                                                                                      #OPTIONAL as {Float} : The Size Of The Dataset (In Go), If Small Quantity Just Fill The Field Nbitems
 |   ├dataQuantity=                                                                                  #OPTIONAL as {Float} : The Number Of Data In The Dataset, E.G. 3 (Images, Audio Or Tokens)
 |   ├shape=                                                                                         #OPTIONAL as {String} : The Shape Of Your Dataset, Can Be Found With X.Shape With Dataframes, E.G. (12, 1000) For A 2D Table With 12 Columns And 1000 Rows
 |   ├source=                                                                                        #OPTIONAL as {String} : The Kind Of Source Of The Dataset
 |   ├sourceUri=                                                                                     #OPTIONAL as {String} : The Uri Of The Dataset If Available
 |   ├owner=                                                                                         #OPTIONAL as {String} : The Owner Of The Dataset If Available
 |   └                                                                                               
 ├measuredAccuracy=                                                                                  #OPTIONAL as {Float} : The Measured Accuracy Of Your Model (Between 0 And 1)
 ├estimatedAccuracy=                                                                                 #OPTIONAL value in {veryPoor, poor, average, good, veryGood} : If You Didn'T Measure The Accuracy Of Your Model In Concrete Percentages, You Can Give An Assessment Of The Precision Between: Very Poor, Poor, Average, Good, Very Good
 ├taskDescription=                                                                                   #OPTIONAL as {String} : Free Field, To Be Fillied In If You Have More Details To Share About Your Task
 └                                                                                                   
 ├(measures.1)                                                                                       #MANDATORY : The Software And/Or Hardware Measures Of The Energy Consumed By The Computing Task
 |   ├measurementMethod=codecarbon                                                                   #MANDATORY as {String} : The Method Used To Perform The Energy Or Flops Measure, Example: Codecarbon, Carbonai, Flops-Compute, Wattmeter, Azure Metrics, Ovh Metrics...
 |   ├manufacturer=                                                                                  #OPTIONAL as {String} : The Name Of The Manufacturer, Example: Nvidia
 |   ├version=2.5.0                                                                                  #OPTIONAL as {String} : The Version Of The Measuring Tool, If Any
 |   ├cpuTrackingMode=machine                                                                        #OPTIONAL as {String} : The Method Used To Track The Consumption Of The Cpu, Example: Constant, Rapl...
 |   ├gpuTrackingMode=machine                                                                        #OPTIONAL as {String} : The Method Used To Track The Consumption Of The Gpu, Example: Constant, Nvml...
 |   ├averageUtilizationCpu=                                                                         #OPTIONAL as {String} : The Average Percentage Of Use Of The Cpu During The Task, For Example: 0.5 If Your Cpu Load Was 50% On Average
 |   ├averageUtilizationGpu=                                                                         #OPTIONAL as {String} : The Average Percentage Of Use Of The Gpu During The Task, For Example: 0.8 If Your Gpu Load Was 80% On Average
 |   ├powerCalibrationMeasurement=                                                                   #OPTIONAL as {Float} : The Power Consumed (In Kwh) During The Calibration Measure If Any (To Isolate The Initial Consumption Of The Hardware)
 |   ├durationCalibrationMeasurement=                                                                #OPTIONAL as {Float} : The Duration Of The Calibration If Any (In Seconds)
 |   ├powerConsumption=0.0004570801720209                                                            #MANDATORY as {Float} : The Power Consumption Measure Of The Computing Task (In Kwh)
 |   ├measurementDuration=6.52341365814209                                                           #OPTIONAL as {Float} : The Duration Of The Measurement (In Seconds)
 |   ├measurementDateTime=                                                                           #OPTIONAL as {Float} : The Date When The Measurement Began, In Format Yyyy-Mm-Dd Hh:Mm:Ss
 |   └                                                                                               
[system]                                                                                             #MANDATORY : System Information Of The Infrastructure On Which Is Run The Computing Task
 ├os=Linux-5.15.0-130-generic-x86_64-with-glibc2.35                                                  #MANDATORY as {String} : Name Of The Operating System
 ├distribution=                                                                                      #OPTIONAL as {String} : Distribution Of The Operating System
 ├distributionVersion=                                                                               #OPTIONAL as {String} : Distribution'S Version Of The Operating System
 └                                                                                                   
[software]                                                                                           #OPTIONAL : Programming Language Information Of The Computing Task
 ├language=                                                                                          #MANDATORY as {String} : Name Of The Programming Language Used, Example : C, Java, Julia, Python...
 ├version=                                                                                           #OPTIONAL as {String} : The Version Of The Measuring Tool, If Any
 └                                                                                                   
[infrastructure]                                                                                     #MANDATORY : The Infrastructure On Which Is Performed The Computing Task
 ├infraType=privateCloud                                                                             #MANDATORY value in {publicCloud,privateCloud,onPremise,$other} : The Type Of Infrastructure Used For The Task
 ├cloudProvider=                                                                                     #OPTIONAL as {String} : If You Are On The Cloud, The Name Of Your Cloud Provider, For Example : Aws, Azure, Google, Ovh...
 ├cloudInstance=                                                                                     #OPTIONAL as {String} : If You Are On A Cloud Vm, The Name Of Your Cloud Instance, For Example : A1.Large, Dasv4-Type2...
 ├cloudService=                                                                                      #OPTIONAL as {String} : If You Are Using An Ai Cloud Service, The Name Of Your Cloud Service, For Example : Openai Service...
 ├(components.1)                                                                                     #MANDATORY : Please Fill As Many Columns As You Need To Describe Your Components
 |   ├componentName=Intel(R) Xeon(R) Gold 6226R CPU @ 2.90GHz                                        #OPTIONAL as {String} : The Name Of This Subsystem Part Of Your Infrastructure, Example Returned By Codecarbon: 1 X Nvidia Geforce Gtx 1080 Ti
 |   ├componentType=cpu                                                                              #MANDATORY as {String} : The Type Of This Subsystem Part Of Your Infrastructure, Example: Cpu, Gpu, Ram, Hdd, Sdd...
 |   ├nbComponent=15                                                                                 #MANDATORY as {Integer} : The Number Of Items Of This Component In Your Infrastructure, If You Have 1 Ram Of 32Go, Fill 1 Here And 32 Inside Memorysize
 |   ├memorySize=                                                                                    #OPTIONAL as {Float} : The Size Of The Memory Of The Component In Gbytes, Useful To Detail The Memory Associated To One Of Your Gpus For Example (If We Want The Total Memory, We Will Multiply The Memorysize By Nbcomponent). If The Component Is Cpu Do Not Fill The Ram Size Here, Create Another Component For Ram, This Field Is For The Embeded Memory Of A Component.
 |   ├manufacturer=                                                                                  #OPTIONAL as {String} : The Name Of The Manufacturer, Example: Nvidia
 |   ├family=                                                                                        #OPTIONAL as {String} : The Family Of This Component, Example: Geforce
 |   ├series=                                                                                        #OPTIONAL as {String} : The Series Of This Component, Example: Gtx1080
 |   ├share=                                                                                         #OPTIONAL as {Float} : The Percentage Of The Physical Equipment Used By The Task, This Sharing Property Should Be Set To 1 By Default (If No Share) And Otherwise To The Correct Percentage, E.G. 0.5 If You Share Half-Time.
 |   └                                                                                               
 ├(components.2)                                                                                     #MANDATORY : Please Fill As Many Columns As You Need To Describe Your Components
 |   ├componentName=1 x Tesla V100S-PCIE-32GB                                                        #OPTIONAL as {String} : The Name Of This Subsystem Part Of Your Infrastructure, Example Returned By Codecarbon: 1 X Nvidia Geforce Gtx 1080 Ti
 |   ├componentType=gpu                                                                              #MANDATORY as {String} : The Type Of This Subsystem Part Of Your Infrastructure, Example: Cpu, Gpu, Ram, Hdd, Sdd...
 |   ├nbComponent=1                                                                                  #MANDATORY as {Integer} : The Number Of Items Of This Component In Your Infrastructure, If You Have 1 Ram Of 32Go, Fill 1 Here And 32 Inside Memorysize
 |   ├memorySize=                                                                                    #OPTIONAL as {Float} : The Size Of The Memory Of The Component In Gbytes, Useful To Detail The Memory Associated To One Of Your Gpus For Example (If We Want The Total Memory, We Will Multiply The Memorysize By Nbcomponent). If The Component Is Cpu Do Not Fill The Ram Size Here, Create Another Component For Ram, This Field Is For The Embeded Memory Of A Component.
 |   ├manufacturer=                                                                                  #OPTIONAL as {String} : The Name Of The Manufacturer, Example: Nvidia
 |   ├family=                                                                                        #OPTIONAL as {String} : The Family Of This Component, Example: Geforce
 |   ├series=                                                                                        #OPTIONAL as {String} : The Series Of This Component, Example: Gtx1080
 |   ├share=                                                                                         #OPTIONAL as {Float} : The Percentage Of The Physical Equipment Used By The Task, This Sharing Property Should Be Set To 1 By Default (If No Share) And Otherwise To The Correct Percentage, E.G. 0.5 If You Share Half-Time.
 |   └                                                                                               
 ├(components.3)                                                                                     #MANDATORY : Please Fill As Many Columns As You Need To Describe Your Components
 |   ├componentName=RAM                                                                              #OPTIONAL as {String} : The Name Of This Subsystem Part Of Your Infrastructure, Example Returned By Codecarbon: 1 X Nvidia Geforce Gtx 1080 Ti
 |   ├componentType=ram                                                                              #MANDATORY as {String} : The Type Of This Subsystem Part Of Your Infrastructure, Example: Cpu, Gpu, Ram, Hdd, Sdd...
 |   ├nbComponent=                                                                                   #MANDATORY as {Integer} : The Number Of Items Of This Component In Your Infrastructure, If You Have 1 Ram Of 32Go, Fill 1 Here And 32 Inside Memorysize
 |   ├memorySize=43.04945373535156                                                                   #OPTIONAL as {Float} : The Size Of The Memory Of The Component In Gbytes, Useful To Detail The Memory Associated To One Of Your Gpus For Example (If We Want The Total Memory, We Will Multiply The Memorysize By Nbcomponent). If The Component Is Cpu Do Not Fill The Ram Size Here, Create Another Component For Ram, This Field Is For The Embeded Memory Of A Component.
 |   ├manufacturer=                                                                                  #OPTIONAL as {String} : The Name Of The Manufacturer, Example: Nvidia
 |   ├family=                                                                                        #OPTIONAL as {String} : The Family Of This Component, Example: Geforce
 |   ├series=                                                                                        #OPTIONAL as {String} : The Series Of This Component, Example: Gtx1080
 |   ├share=                                                                                         #OPTIONAL as {Float} : The Percentage Of The Physical Equipment Used By The Task, This Sharing Property Should Be Set To 1 By Default (If No Share) And Otherwise To The Correct Percentage, E.G. 0.5 If You Share Half-Time.
 |   └                                                                                               
 └                                                                                                   
[environment]                                                                                        #MANDATORY : Environment Of The Infrastructure: Region Of Calculation And Energy Used
 ├country=France                                                                                     #MANDATORY as {String} : 
 ├latitude=48.8582                                                                                   #OPTIONAL as {Float} : 
 ├longitude=2.3387                                                                                   #OPTIONAL as {Float} : 
 ├location=                                                                                          #OPTIONAL as {String} : More Precise Location Like City, Region Or Datacenter Name
 ├powerSupplierType=                                                                                 #OPTIONAL value in {public, private, internal, $other} : 
 ├powerSource=                                                                                       #OPTIONAL value in {solar, wind, nuclear, hydroelectric, gas, coal, $other} : 
 ├powerSourceCarbonIntensity=                                                                        #OPTIONAL as {Float} : Carbon Intensity Of The Electicity You Used (In Gco2Eq/Kwh)
 └                                                                                                   
quality=                                                                                             #OPTIONAL value in {high, medium, low } : The Quality Of The Information You Provided, 3 Possibilities : High (Percentage Error +/-10%), Medium (Percentage Error +/-25%), Low (Percentage Error +/-50%)
